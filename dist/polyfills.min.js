/*! eq.js polyfills v1.7.0 (c) 2013-2015 Sam Richard with thanks to the Financial Times, MIT license */
!function(){"getPrototypeOf"in Object||(Object.getPrototypeOf=function(t){if(t!==Object(t))throw new TypeError("Object.getPrototypeOf called on non-object");return t.constructor?t.constructor.prototype:null}),"requestAnimationFrame"in this||!function(t){"use strict";var e=Date.now();t.requestAnimationFrame=function(t){if("function"!=typeof t)throw new TypeError(t+"is not a function");var n=Date.now(),o=16+e-n;return 0>o&&(o=0),e=n,setTimeout(function(){e=Date.now(),t(performance.now())},o)},t.cancelAnimationFrame=function(t){clearTimeout(t)}}(this),function(t){if(!("Event"in t))return!1;if("function"==typeof t.Event)return!0;try{return new Event("click"),!0}catch(e){return!1}}(this)||(this.Event=function(t,e){if(!t)throw new Error("Not enough arguments");var n=document.createEvent("Event"),o=e&&void 0!==e.bubbles?e.bubbles:!1,r=e&&void 0!==e.cancelable?e.cancelable:!1;return n.initEvent(t,o,r),n}),"CustomEvent"in this&&("function"==typeof this.CustomEvent||this.CustomEvent.toString().indexOf("CustomEventConstructor")>-1)||(this.CustomEvent=function(t,e){if(!t)throw Error('TypeError: Failed to construct "CustomEvent": An event name must be provided.');var n;e=e||{bubbles:!1,cancelable:!1,detail:null};try{n=document.createEvent("CustomEvent"),n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail)}catch(o){n=document.createEvent("Event"),n.initEvent(t,e.bubbles,e.cancelable),n.detail=e.detail}return n},CustomEvent.prototype=Event.prototype),"addEventListener"in this||document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&document.dispatchEvent(new Event("DOMContentLoaded",{bubbles:!0}))}),"getComputedStyle"in this||!function(t){function e(t,n,o){var r,i=t.document&&t.currentStyle[n].match(/([\d\.]+)(%|cm|em|in|mm|pc|pt|)/)||[0,0,""],c=i[1],u=i[2];return o=o?/%|em/.test(u)&&t.parentElement?e(t.parentElement,"fontSize",null):16:o,r="fontSize"==n?o:/width/i.test(n)?t.clientWidth:t.clientHeight,"%"==u?c/100*r:"cm"==u?.3937*c*96:"em"==u?c*o:"in"==u?96*c:"mm"==u?.3937*c*96/10:"pc"==u?12*c*96/72:"pt"==u?96*c/72:c}function n(t,e){var n="border"==e?"Width":"",o=e+"Top"+n,r=e+"Right"+n,i=e+"Bottom"+n,c=e+"Left"+n;t[e]=(t[o]==t[r]&&t[o]==t[i]&&t[o]==t[c]?[t[o]]:t[o]==t[i]&&t[c]==t[r]?[t[o],t[r]]:t[c]==t[r]?[t[o],t[r],t[i]]:[t[o],t[r],t[i],t[c]]).join(" ")}function o(t){var o,r=this,i=t.currentStyle,c=e(t,"fontSize"),u=function(t){return"-"+t.toLowerCase()};for(o in i)if(Array.prototype.push.call(r,"styleFloat"==o?"float":o.replace(/[A-Z]/,u)),"width"==o)r[o]=t.offsetWidth+"px";else if("height"==o)r[o]=t.offsetHeight+"px";else if("styleFloat"==o)r["float"]=i[o];else if(/margin.|padding.|border.+W/.test(o)&&"auto"!=r[o])r[o]=Math.round(e(t,o,c))+"px";else if(/^outline/.test(o))try{r[o]=i[o]}catch(a){r.outlineColor=i.color,r.outlineStyle=r.outlineStyle||"none",r.outlineWidth=r.outlineWidth||"0px",r.outline=[r.outlineColor,r.outlineWidth,r.outlineStyle].join(" ")}else r[o]=i[o];n(r,"margin"),n(r,"padding"),n(r,"border"),r.fontSize=Math.round(c)+"px"}o.prototype={constructor:o,getPropertyPriority:function(){throw new Error("NotSupportedError: DOM Exception 9")},getPropertyValue:function(t){return this[t.replace(/-\w/g,function(t){return t[1].toUpperCase()})]},item:function(t){return this[t]},removeProperty:function(){throw new Error("NoModificationAllowedError: DOM Exception 7")},setProperty:function(){throw new Error("NoModificationAllowedError: DOM Exception 7")},getPropertyCSSValue:function(){throw new Error("NotSupportedError: DOM Exception 9")}},t.getComputedStyle=function(t){return new o(t)}}(this),"forEach"in Array.prototype||(Array.prototype.forEach=function(t){if(void 0===this||null===this)throw new TypeError(this+"is not an object");if(!(t instanceof Function))throw new TypeError(t+" is not a function");for(var e=Object(this),n=arguments[1],o=e instanceof String?e.split(""):e,r=Math.max(Math.min(o.length,9007199254740991),0)||0,i=-1;++i<r;)i in o&&t.call(n,o[i],i,e)})}();
//# sourceMappingURL=polyfills.min.js.map